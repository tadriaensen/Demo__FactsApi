{
	"info": {
		"_postman_id": "ed34af45-e051-40e8-8847-c4510b16896e",
		"name": "Validation; subjects",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4257612"
	},
	"item": [
		{
			"name": "E2E Validation",
			"item": [
				{
					"name": "Retrieve all subjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"nbr_subjects\", jsonData.length);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"subject_id\", jsonData[\"subject_id\"]);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subject_name\": \"Software testing\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve all subjects (after create)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate the number of subjects returned\", function () {\r",
									"    var expected_result = pm.collectionVariables.get(\"nbr_subjects\") + 1;\r",
									"    var actual_result = jsonData.length;\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve subject details of newly created subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate subject id\", function () {\r",
									"    var expected_result = pm.collectionVariables.get(\"subject_id\");\r",
									"    var actual_result = jsonData[\"subject_id\"];\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate subject name\", function () {\r",
									"    var expected_result = \"Software testing\";\r",
									"    var actual_result = jsonData[\"subject_name\"];\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update subject name of newly created subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subject_name\": \"Nerd world\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve subject details after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate subject id\", function () {\r",
									"    var expected_result = pm.collectionVariables.get(\"subject_id\");\r",
									"    var actual_result = jsonData[\"subject_id\"];\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate subject name\", function () {\r",
									"    var expected_result = \"Nerd world\";\r",
									"    var actual_result = jsonData[\"subject_name\"];\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete newly created subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate that resource can't be deleted for a second time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate that subject details do  not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate that subject no longer exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate the number of subjects returned\", function () {\r",
									"    var expected_result = pm.collectionVariables.get(\"nbr_subjects\");\r",
									"    var actual_result = jsonData.length;\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "E2E Validation (with failure)",
			"item": [
				{
					"name": "Retrieve all subjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"nbr_subjects\", jsonData.length);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"subject_id\", jsonData[\"subject_id\"]);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subject_name\": \"Software testing\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve all subjects (after create)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate the number of subjects returned\", function () {\r",
									"    // var expected_result = pm.collectionVariables.get(\"nbr_subjects\") + 1;\r",
									"    var expected_result = pm.collectionVariables.get(\"nbr_subjects\");\r",
									"    var actual_result = jsonData.length;\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve subject details of newly created subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate subject id\", function () {\r",
									"    var expected_result = pm.collectionVariables.get(\"subject_id\");\r",
									"    var actual_result = jsonData[\"subject_id\"];\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate subject name\", function () {\r",
									"    var expected_result = \"Software testing\";\r",
									"    var actual_result = jsonData[\"subject_name\"];\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update subject name of newly created subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subject_name\": \"Nerd world\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve subject details after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate subject id\", function () {\r",
									"    var expected_result = pm.collectionVariables.get(\"subject_id\");\r",
									"    var actual_result = jsonData[\"subject_id\"];\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate subject name\", function () {\r",
									"    var expected_result = \"Nerd world\";\r",
									"    var actual_result = jsonData[\"subject_name\"];\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete newly created subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate that resource can't be deleted for a second time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate that subject details do  not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects/{{subject_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects",
								"{{subject_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate that subject no longer exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate the number of subjects returned\", function () {\r",
									"    var expected_result = pm.collectionVariables.get(\"nbr_subjects\");\r",
									"    var actual_result = jsonData.length;\r",
									"    pm.expect(expected_result).to.eql(actual_result);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subjects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{X-API-Key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "nbr_subjects",
			"value": "",
			"type": "string"
		},
		{
			"key": "subject_id",
			"value": ""
		}
	]
}